import sys,os,zipfile,re,shutil,glob
import find,which


MODULE_FILE = sys.modules[__name__].__file__
PROGRAM_DIR = os.path.abspath(os.path.dirname(MODULE_FILE))
ROOTDIR=os.path.realpath(os.path.join(PROGRAM_DIR,os.pardir))

PRODUCT_NAME="Bagman"

music=False
dev=False

#f = open(os.path.join(ROOTDIR,"src/gods/game/Version.java"))
#contents = f.read()
#f.close()

#r = re.compile(r'.*STRING_VALUE\s*=\s*"(.*)".*',re.DOTALL)
#g = r.match(contents)
#version = g.group(1).replace(".","_")
version = "1.2"

print("making archive for version "+version)

os.chdir(ROOTDIR)
archname=PRODUCT_NAME+"-win32-"+version+".zip"

zfn = os.path.join(ROOTDIR,os.pardir,archname)
if os.path.exists(zfn):
    os.remove(zfn)

zf = zipfile.ZipFile(zfn,mode="w",compression=zipfile.ZIP_DEFLATED)

dll_list = ["SDL.dll","SDL_Mixer.dll"]+["smpeg.dll","libgcc_s_sjlj-1.dll","libstdc++-6.dll","libgcc_s_dw2-1.dll"]  # MP3 playing needs the second part

items_list = ["bagman*.bat","*.cbp","*.dev","*.txt","COPYING","resource","exploit","sound","src"]

real_items_list = []
for i in items_list:
    real_items_list.extend(glob.glob(i))

for d in dll_list:
    print("processing '"+d+"'")
    dp = which.which(d)
    if len(dp)==0:
        raise Exception("%s not found in PATH" % d)
    zf.write(dp[0],arcname=PRODUCT_NAME+"/"+d)

for i in real_items_list:
    print("processing '"+i+"'")
    if os.path.isfile(i):
        zf.write(i,arcname=PRODUCT_NAME+"/"+i)
    else:
        fnd = find.Find()
        items = fnd.init(i)
        for f in items:
            if i == "resource" and os.path.basename(f) in ["settings","soundbank.bin"]:
                pass
            else:
                fi = f.replace(os.sep,"/")[2:]
                if os.path.isfile(fi):
                    if fi.endswith("~"):
                        pass
                    else:
                        zf.write(fi,arcname=PRODUCT_NAME+"/"+fi)
                else:
                    zfi = zipfile.ZipInfo(PRODUCT_NAME+"/"+fi+"/")
                    zf.writestr(zfi, '')

zfi = zipfile.ZipInfo(PRODUCT_NAME+"/bin/")
zf.writestr(zfi, '')
zfi = zipfile.ZipInfo(PRODUCT_NAME+"/bin/Release/")
zf.writestr(zfi, '')
zfi = zipfile.ZipInfo(PRODUCT_NAME+"/bin/Debug/")
zf.writestr(zfi, '')
zf.write("bin/Release/bagman.exe",arcname=PRODUCT_NAME+"/bin/Release/bagman.exe")

zf.close()




